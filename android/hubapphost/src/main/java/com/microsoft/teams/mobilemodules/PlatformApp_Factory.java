// Generated by Dagger (https://dagger.dev).
package com.microsoft.teams.mobilemodules;

import com.microsoft.hubapphost.impls.TeamsSdkSimMobileModuleFactory;
import com.microsoft.teams.sdk.ISdkRunnerAppManager;
import com.microsoft.teams.storage.dao.appdefinition.AppDefinitionDao;
import com.microsoft.teams.storage.models.MobileModuleDefinition;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PlatformApp_Factory implements Factory<PlatformApp> {
  private final Provider<String> appIdProvider;

  private final Provider<MobileModuleDefinition> mobileModuleDefinitionProvider;

  private final Provider<AppDefinitionDao> appDefinitionDaoProvider;

  private final Provider<TeamsSdkSimMobileModuleFactory> mobileModuleFactoryProvider;

  private final Provider<ISdkRunnerAppManager> sdkRunnerAppManagerProvider;

  public PlatformApp_Factory(Provider<String> appIdProvider,
      Provider<MobileModuleDefinition> mobileModuleDefinitionProvider,
      Provider<AppDefinitionDao> appDefinitionDaoProvider,
      Provider<TeamsSdkSimMobileModuleFactory> mobileModuleFactoryProvider,
      Provider<ISdkRunnerAppManager> sdkRunnerAppManagerProvider) {
    this.appIdProvider = appIdProvider;
    this.mobileModuleDefinitionProvider = mobileModuleDefinitionProvider;
    this.appDefinitionDaoProvider = appDefinitionDaoProvider;
    this.mobileModuleFactoryProvider = mobileModuleFactoryProvider;
    this.sdkRunnerAppManagerProvider = sdkRunnerAppManagerProvider;
  }

  @Override
  public PlatformApp get() {
    return newInstance(appIdProvider.get(), mobileModuleDefinitionProvider.get(), appDefinitionDaoProvider.get(), mobileModuleFactoryProvider.get(), sdkRunnerAppManagerProvider.get());
  }

  public static PlatformApp_Factory create(Provider<String> appIdProvider,
      Provider<MobileModuleDefinition> mobileModuleDefinitionProvider,
      Provider<AppDefinitionDao> appDefinitionDaoProvider,
      Provider<TeamsSdkSimMobileModuleFactory> mobileModuleFactoryProvider,
      Provider<ISdkRunnerAppManager> sdkRunnerAppManagerProvider) {
    return new PlatformApp_Factory(appIdProvider, mobileModuleDefinitionProvider, appDefinitionDaoProvider, mobileModuleFactoryProvider, sdkRunnerAppManagerProvider);
  }

  public static PlatformApp newInstance(String appId, MobileModuleDefinition mobileModuleDefinition,
      AppDefinitionDao appDefinitionDao, TeamsSdkSimMobileModuleFactory mobileModuleFactory,
      ISdkRunnerAppManager sdkRunnerAppManager) {
    return new PlatformApp(appId, mobileModuleDefinition, appDefinitionDao, mobileModuleFactory, sdkRunnerAppManager);
  }
}
