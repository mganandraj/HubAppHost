// Generated by Dagger (https://dagger.dev).
package com.microsoft.teams.sdk.react.modules;

import com.facebook.react.bridge.ReactApplicationContext;
import com.microsoft.teams.logger.ILogger;
import com.microsoft.teams.sdk.SdkApplicationContext;
import com.microsoft.teams.core.app.ITeamsApplication;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SdkLoggerModule_Factory implements Factory<SdkLoggerModule> {
  private final Provider<ReactApplicationContext> reactContextProvider;

  private final Provider<String> moduleIdProvider;

  private final Provider<ITeamsApplication> teamsApplicationProvider;

  private final Provider<ILogger> loggerProvider;

  private final Provider<SdkApplicationContext> sdkApplicationContextProvider;

  public SdkLoggerModule_Factory(Provider<ReactApplicationContext> reactContextProvider,
      Provider<String> moduleIdProvider, Provider<ITeamsApplication> teamsApplicationProvider,
      Provider<ILogger> loggerProvider,
      Provider<SdkApplicationContext> sdkApplicationContextProvider) {
    this.reactContextProvider = reactContextProvider;
    this.moduleIdProvider = moduleIdProvider;
    this.teamsApplicationProvider = teamsApplicationProvider;
    this.loggerProvider = loggerProvider;
    this.sdkApplicationContextProvider = sdkApplicationContextProvider;
  }

  @Override
  public SdkLoggerModule get() {
    return newInstance(reactContextProvider.get(), moduleIdProvider.get(), teamsApplicationProvider.get(), loggerProvider.get(), sdkApplicationContextProvider.get());
  }

  public static SdkLoggerModule_Factory create(
      Provider<ReactApplicationContext> reactContextProvider, Provider<String> moduleIdProvider,
      Provider<ITeamsApplication> teamsApplicationProvider, Provider<ILogger> loggerProvider,
      Provider<SdkApplicationContext> sdkApplicationContextProvider) {
    return new SdkLoggerModule_Factory(reactContextProvider, moduleIdProvider, teamsApplicationProvider, loggerProvider, sdkApplicationContextProvider);
  }

  public static SdkLoggerModule newInstance(ReactApplicationContext reactContext, String moduleId,
      ITeamsApplication teamsApplication, ILogger logger,
      SdkApplicationContext sdkApplicationContext) {
    return new SdkLoggerModule(reactContext, moduleId, teamsApplication, logger, sdkApplicationContext);
  }
}
