// Generated by Dagger (https://dagger.dev).
package com.microsoft.teams.mobilemodules;

import com.microsoft.teams.storage.IExperimentationManager;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MobileModuleManager_Factory implements Factory<MobileModuleManager> {
  private final Provider<IPlatformAppManager> platformAppManagerProvider;

  private final Provider<IExperimentationManager> experimentationManagerProvider;

  public MobileModuleManager_Factory(Provider<IPlatformAppManager> platformAppManagerProvider,
      Provider<IExperimentationManager> experimentationManagerProvider) {
    this.platformAppManagerProvider = platformAppManagerProvider;
    this.experimentationManagerProvider = experimentationManagerProvider;
  }

  @Override
  public MobileModuleManager get() {
    return newInstance(platformAppManagerProvider.get(), experimentationManagerProvider.get());
  }

  public static MobileModuleManager_Factory create(
      Provider<IPlatformAppManager> platformAppManagerProvider,
      Provider<IExperimentationManager> experimentationManagerProvider) {
    return new MobileModuleManager_Factory(platformAppManagerProvider, experimentationManagerProvider);
  }

  public static MobileModuleManager newInstance(IPlatformAppManager platformAppManager,
      IExperimentationManager experimentationManager) {
    return new MobileModuleManager(platformAppManager, experimentationManager);
  }
}
