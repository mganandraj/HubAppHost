// Generated by Dagger (https://dagger.dev).
package com.microsoft.teams.mobilemodules;

import android.content.Context;
import com.microsoft.teams.logger.ILogger;
import com.microsoft.teams.storage.IExperimentationManager;
import com.microsoft.teams.storage.dao.appdefinition.AppDefinitionDao;
import com.microsoft.teams.androidutils.tasks.ITaskRunner;
import com.microsoft.teams.core.app.ITeamsApplication;
import com.microsoft.teams.core.preferences.IPreferences;
import com.microsoft.teams.core.services.IScenarioManager;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MobileModuleSyncManager_Factory implements Factory<MobileModuleSyncManager> {
  private final Provider<Context> contextProvider;

  private final Provider<ITeamsApplication> teamsApplicationProvider;

  private final Provider<ILogger> loggerProvider;

  private final Provider<IScenarioManager> scenarioManagerProvider;

  private final Provider<ITaskRunner> taskRunnerProvider;

  private final Provider<IExperimentationManager> experimentationManagerProvider;

  private final Provider<IPreferences> preferencesProvider;

  private final Provider<IMobileModuleManager> mobileModuleManagerProvider;

  private final Provider<AppDefinitionDao> appDefinitionDaoProvider;

  public MobileModuleSyncManager_Factory(Provider<Context> contextProvider,
      Provider<ITeamsApplication> teamsApplicationProvider, Provider<ILogger> loggerProvider,
      Provider<IScenarioManager> scenarioManagerProvider, Provider<ITaskRunner> taskRunnerProvider,
      Provider<IExperimentationManager> experimentationManagerProvider,
      Provider<IPreferences> preferencesProvider,
      Provider<IMobileModuleManager> mobileModuleManagerProvider,
      Provider<AppDefinitionDao> appDefinitionDaoProvider) {
    this.contextProvider = contextProvider;
    this.teamsApplicationProvider = teamsApplicationProvider;
    this.loggerProvider = loggerProvider;
    this.scenarioManagerProvider = scenarioManagerProvider;
    this.taskRunnerProvider = taskRunnerProvider;
    this.experimentationManagerProvider = experimentationManagerProvider;
    this.preferencesProvider = preferencesProvider;
    this.mobileModuleManagerProvider = mobileModuleManagerProvider;
    this.appDefinitionDaoProvider = appDefinitionDaoProvider;
  }

  @Override
  public MobileModuleSyncManager get() {
    return newInstance(contextProvider.get(), teamsApplicationProvider.get(), loggerProvider.get(), scenarioManagerProvider.get(), taskRunnerProvider.get(), experimentationManagerProvider.get(), preferencesProvider.get(), mobileModuleManagerProvider.get(), appDefinitionDaoProvider.get());
  }

  public static MobileModuleSyncManager_Factory create(Provider<Context> contextProvider,
      Provider<ITeamsApplication> teamsApplicationProvider, Provider<ILogger> loggerProvider,
      Provider<IScenarioManager> scenarioManagerProvider, Provider<ITaskRunner> taskRunnerProvider,
      Provider<IExperimentationManager> experimentationManagerProvider,
      Provider<IPreferences> preferencesProvider,
      Provider<IMobileModuleManager> mobileModuleManagerProvider,
      Provider<AppDefinitionDao> appDefinitionDaoProvider) {
    return new MobileModuleSyncManager_Factory(contextProvider, teamsApplicationProvider, loggerProvider, scenarioManagerProvider, taskRunnerProvider, experimentationManagerProvider, preferencesProvider, mobileModuleManagerProvider, appDefinitionDaoProvider);
  }

  public static MobileModuleSyncManager newInstance(Context context,
      ITeamsApplication teamsApplication, ILogger logger, IScenarioManager scenarioManager,
      ITaskRunner taskRunner, IExperimentationManager experimentationManager,
      IPreferences preferences, IMobileModuleManager mobileModuleManager,
      AppDefinitionDao appDefinitionDao) {
    return new MobileModuleSyncManager(context, teamsApplication, logger, scenarioManager, taskRunner, experimentationManager, preferences, mobileModuleManager, appDefinitionDao);
  }
}
